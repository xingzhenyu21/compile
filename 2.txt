declare i32 @getint()
declare void @putint(i32)
declare i32 @getch()
declare void @putch(i32)
declare void @memset(i32*, i32, i32)
declare i32 @getarray(i32*)
declare void @putarray(i32, i32*)
@ans = dso_local global [50x i32] zeroinitializer 
@sum = dso_local global i32 0
@n = dso_local global i32 0
@row = dso_local global [50x i32] zeroinitializer 
@line1 = dso_local global [50x i32] zeroinitializer 
@line2 = dso_local global [100x i32] zeroinitializer 
define dso_local void @printans()%x1 = load i32, i32* @sum
 %x2 = add i32 %x1, 1
store i32 %x2, i32* @sum
%x3 = alloca i32
store i32 1, i32* %x3
br label %x4
x4:
%x5 = load i32, i32* %x3
%x6 = load i32, i32* @n
%x7= icmp sle i32 %x5, %x6
%x8= zext i1 %x7 to i32
   %x9 = icmp ne i32 %x8, 0
   br i1 %x9,label %x10, label %x11
x10:
%x12 = load i32, i32* %x3
%x13 = getelementptr [50 x i32], [50 x i32]* @ans, i32 0, i32 %x12
%x14 = load i32, i32* %x13
call void @putint(i32 %x14)
%x15 = load i32, i32* %x3
%x16 = load i32, i32* @n
%x17= icmp eq i32 %x15, %x16
%x18= zext i1 %x17 to i32
   %x19 = icmp ne i32 %x18, 0
   br i1 %x19,label %x20, label %x21
x20:
call void @putch(i32 10)
ret void
br label %x22
x21:
call void @putch(i32 32)
br label %x22
x22:
%x23 = load i32, i32* %x3
 %x24 = add i32 %x23, 1
store i32 %x24, i32* %x3
  br label %x4
x11:
   ret void
}
define dso_local i32 @main(){
%x25 = alloca i32
%x26 = call i32 @getint()
store i32 %x26, i32* %x25
br label %x27
x27:
%x28 = load i32, i32* %x25
%x29= icmp sgt i32 %x28, 0
%x30= zext i1 %x29 to i32   %x31 = icmp ne i32 %x30, 0
   br i1 %x31,label %x32, label %x33
x32:
%x34 = call i32 @getint()
store i32 %x34, i32* @n
%x35 = load i32, i32* %x25
 %x36 = sub i32 %x35, 1
store i32 %x36, i32* %x25
  br label %x27
x33:
  ret i32 0
}
