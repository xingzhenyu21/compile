declare i32 @getint()
declare void @putint(i32)
declare i32 @getch()
declare void @putch(i32)
declare void @memset(i32*, i32, i32)
declare i32 @getarray(i32*)
declare void @putarray(i32, i32*)
@n = dso_local global i32 0
define dso_local i32 @Merge(i32* %x1,i32 %x2,i32 %x3,i32 %x4){
%x5 = alloca i32*
store i32*  %x1, i32* * %x5
 %x6 = load i32* , i32* * %x5
%x7 = alloca i32
 store i32 %x2, i32* %x7
%x8 = alloca i32
 store i32 %x3, i32* %x8
%x9 = alloca i32
 store i32 %x4, i32* %x9
%x10 = alloca i32
%x11 = load i32, i32* %x8
%x12 = load i32, i32* %x7
 %x13 = sub i32 %x11, %x12
 %x14 = add i32 %x13, 1
store i32 %x14, i32* %x10
%x15 = alloca i32
%x16 = load i32, i32* %x9
%x17 = load i32, i32* %x8
 %x18 = sub i32 %x16, %x17
store i32 %x18, i32* %x15
%x19 = alloca [ 10 x i32]
%x20 = getelementptr [10 x i32], [10 x i32]* %x19, i32 0, i32 0
call void @memset(i32* %x20, i32 0, i32 40)
%x21 = alloca [ 10 x i32]
%x22 = getelementptr [10 x i32], [10 x i32]* %x21, i32 0, i32 0
call void @memset(i32* %x22, i32 0, i32 40)
%x23 = alloca i32
store i32 0, i32* %x23
%x24 = alloca i32
store i32 0, i32* %x24
br label %x25
x25:
%x26 = load i32, i32* %x23
%x27 = load i32, i32* %x10
%x28= icmp slt i32 %x26, %x27
%x29= zext i1 %x28 to i32
   %x30 = icmp ne i32 %x29, 0
   br i1 %x30,label %x31, label %x32
x31:
%x33 = load i32, i32* %x23
%x34 = getelementptr [10 x i32], [10 x i32]* %x19, i32 0, i32 %x33
%x35 = load i32, i32* %x23
%x36 = load i32, i32* %x7
 %x37 = add i32 %x35, %x36
%x38 = getelementptr i32, i32* %x6, i32 %x37
%x39 = load i32, i32* %x38
 store i32 %x39, i32* %x34
%x40 = load i32, i32* %x23
 %x41 = add i32 %x40, 1
store i32 %x41, i32* %x23
  br label %x25
x32:
br label %x42
x42:
%x43 = load i32, i32* %x24
%x44 = load i32, i32* %x15
%x45= icmp slt i32 %x43, %x44
%x46= zext i1 %x45 to i32
   %x47 = icmp ne i32 %x46, 0
   br i1 %x47,label %x48, label %x49
x48:
%x50 = load i32, i32* %x24
%x51 = getelementptr [10 x i32], [10 x i32]* %x21, i32 0, i32 %x50
%x52 = load i32, i32* %x24
%x53 = load i32, i32* %x8
 %x54 = add i32 %x52, %x53
 %x55 = add i32 %x54, 1
%x56 = getelementptr i32, i32* %x6, i32 %x55
%x57 = load i32, i32* %x56
 store i32 %x57, i32* %x51
%x58 = load i32, i32* %x24
 %x59 = add i32 %x58, 1
store i32 %x59, i32* %x24
  br label %x42
x49:
store i32 0, i32* %x23
store i32 0, i32* %x24
%x60 = alloca i32
%x61 = load i32, i32* %x7
store i32 %x61, i32* %x60
br label %x62
x62:
%x63 = load i32, i32* %x23
%x64 = load i32, i32* %x10
%x65= icmp ne i32 %x63, %x64
%x66= zext i1 %x65 to i32
%x67 = load i32, i32* %x24
%x68 = load i32, i32* %x15
%x69= icmp ne i32 %x67, %x68
%x70= zext i1 %x69 to i32
%x71 = mul i32 %x66, %x70
   %x72 = icmp ne i32 %x71, 0
   br i1 %x72,label %x73, label %x74
x73:
%x75 = load i32, i32* %x23
%x76 = getelementptr [10 x i32], [10 x i32]* %x19, i32 0, i32 %x75
%x77 = load i32, i32* %x76
%x78 = load i32, i32* %x24
%x79 = getelementptr [10 x i32], [10 x i32]* %x21, i32 0, i32 %x78
%x80 = load i32, i32* %x79
 %x81 = add i32 %x80, 1
%x82= icmp slt i32 %x77, %x81
%x83= zext i1 %x82 to i32
   %x84 = icmp ne i32 %x83, 0
   br i1 %x84,label %x85, label %x86
x85:
%x87 = load i32, i32* %x60
%x88 = getelementptr i32, i32* %x6, i32 %x87
%x89 = load i32, i32* %x23
%x90 = getelementptr [10 x i32], [10 x i32]* %x19, i32 0, i32 %x89
%x91 = load i32, i32* %x90
 store i32 %x91, i32* %x88
%x92 = load i32, i32* %x60
 %x93 = add i32 %x92, 1
store i32 %x93, i32* %x60
%x94 = load i32, i32* %x23
 %x95 = add i32 %x94, 1
store i32 %x95, i32* %x23
br label %x96
x86:
%x97 = load i32, i32* %x60
%x98 = getelementptr i32, i32* %x6, i32 %x97
%x99 = load i32, i32* %x24
%x100 = getelementptr [10 x i32], [10 x i32]* %x21, i32 0, i32 %x99
%x101 = load i32, i32* %x100
 store i32 %x101, i32* %x98
%x102 = load i32, i32* %x60
 %x103 = add i32 %x102, 1
store i32 %x103, i32* %x60
%x104 = load i32, i32* %x24
 %x105 = add i32 %x104, 1
store i32 %x105, i32* %x24
br label %x96
x96:
ret i32 0
  br label %x62
x74:
br label %x106
x106:
%x107 = load i32, i32* %x23
%x108 = load i32, i32* %x10
%x109= icmp slt i32 %x107, %x108
%x110= zext i1 %x109 to i32
   %x111 = icmp ne i32 %x110, 0
   br i1 %x111,label %x112, label %x113
x112:
%x114 = load i32, i32* %x60
%x115 = getelementptr i32, i32* %x6, i32 %x114
%x116 = load i32, i32* %x23
%x117 = getelementptr [10 x i32], [10 x i32]* %x19, i32 0, i32 %x116
%x118 = load i32, i32* %x117
 store i32 %x118, i32* %x115
%x119 = load i32, i32* %x60
 %x120 = add i32 %x119, 1
store i32 %x120, i32* %x60
%x121 = load i32, i32* %x23
 %x122 = add i32 %x121, 1
store i32 %x122, i32* %x23
  br label %x106
x113:
br label %x123
x123:
%x124 = load i32, i32* %x24
%x125 = load i32, i32* %x15
%x126= icmp slt i32 %x124, %x125
%x127= zext i1 %x126 to i32
   %x128 = icmp ne i32 %x127, 0
   br i1 %x128,label %x129, label %x130
x129:
%x131 = load i32, i32* %x60
%x132 = getelementptr i32, i32* %x6, i32 %x131
%x133 = load i32, i32* %x24
%x134 = getelementptr [10 x i32], [10 x i32]* %x21, i32 0, i32 %x133
%x135 = load i32, i32* %x134
 store i32 %x135, i32* %x132
%x136 = load i32, i32* %x60
 %x137 = add i32 %x136, 1
store i32 %x137, i32* %x60
%x138 = load i32, i32* %x24
 %x139 = add i32 %x138, 1
store i32 %x139, i32* %x24
  br label %x123
x130:
  ret i32 0
}
define dso_local i32 @MergeSort(i32* %x140,i32 %x141,i32 %x142){
%x143 = alloca i32*
store i32*  %x140, i32* * %x143
 %x144 = load i32* , i32* * %x143
%x145 = alloca i32
 store i32 %x141, i32* %x145
%x146 = alloca i32
 store i32 %x142, i32* %x146
%x147 = load i32, i32* %x145
%x148 = load i32, i32* %x146
%x149= icmp slt i32 %x147, %x148
%x150= zext i1 %x149 to i32
   %x151 = icmp ne i32 %x150, 0
   br i1 %x151,label %x152, label %x153
x152:
%x154 = alloca i32
%x155 = load i32, i32* %x145
%x156 = load i32, i32* %x146
 %x157 = add i32 %x155, %x156
 %x158 = sdiv i32 %x157, 2
store i32 %x158, i32* %x154
%x159 = alloca i32
%x160 = getelementptr i32, i32* %x144, i32 0
%x161 = load i32, i32* %x145
%x162 = load i32, i32* %x154
%x163 = call i32 @MergeSort(i32* %x160,i32 %x161,i32 %x162)
store i32 %x163, i32* %x159
%x164 = load i32, i32* %x154
 %x165 = add i32 %x164, 1
store i32 %x165, i32* %x159
%x166 = getelementptr i32, i32* %x144, i32 0
%x167 = load i32, i32* %x159
%x168 = load i32, i32* %x146
%x169 = call i32 @MergeSort(i32* %x166,i32 %x167,i32 %x168)
store i32 %x169, i32* %x159
%x170 = getelementptr i32, i32* %x144, i32 0
%x171 = load i32, i32* %x145
%x172 = load i32, i32* %x154
%x173 = load i32, i32* %x146
%x174 = call i32 @Merge(i32* %x170,i32 %x171,i32 %x172,i32 %x173)
store i32 %x174, i32* %x159
br label %x153
x153:
  ret i32 0
}
define dso_local i32 @main(){
%x176 = alloca [ 10 x i32]
%x177 = getelementptr [10 x i32], [10 x i32]* %x176, i32 0, i32 0
call void @memset(i32* %x177, i32 0, i32 40)
%x178 = getelementptr [10 x i32], [10 x i32]* %x176, i32 0, i32 0
%x179 = call i32 @getarray(i32* %x178)
store i32 %x179, i32* @n
%x180 = alloca i32
store i32 0, i32* %x180
%x181 = alloca i32
%x182 = load i32, i32* @n
 %x183 = sub i32 %x182, 1
store i32 %x183, i32* %x181
%x184 = getelementptr [10 x i32], [10 x i32]* %x176, i32 0, i32 0
%x185 = load i32, i32* %x180
%x186 = load i32, i32* %x181
%x187 = call i32 @MergeSort(i32* %x184,i32 %x185,i32 %x186)
store i32 %x187, i32* %x180
%x188 = load i32, i32* @n
%x189 = getelementptr [10 x i32], [10 x i32]* %x176, i32 0, i32 0
call void @putarray(i32 %x188,i32* %x189)
  ret i32 0
}
