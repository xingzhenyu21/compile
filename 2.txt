declare i32 @getint()
declare void @putint(i32)
declare i32 @getch()
declare void @putch(i32)
declare void @memset(i32*, i32, i32)
@field = dso_local global [2x i32]] zeroinitializer 
define dso_local i32 @main(){
%x1 = alloca [ 1 x i32]
%x2 = getelementptr [1 x i32], [1 x i32]* %x1, i32 0, i32 0
call void @memset(i32* %x2, i32 0, i32 4)
%x3 = alloca [ 3 x i32]
%x4 = getelementptr [3 x i32], [3 x i32]* %x3, i32 0, i32 0
call void @memset(i32* %x4, i32 0, i32 12)
%x5 = alloca i32
%x6 = getelementptr [2 x i32], [2 x i32]* @field, i32 0, i32 0
%x7 = call i32 @getint()
 store i32 %x7, i32* %x6
%x8 = getelementptr [2 x i32], [2 x i32]* @field, i32 0, i32 1
%x9 = call i32 @getint()
 store i32 %x9, i32* %x8
 %x10 = add i32 0, 0
%x11 = getelementptr [3 x i32], [3 x i32]* %x3, i32 0, i32 %x10
 %x12 = sub i32 0, 1
 store i32 %x12, i32* %x11
%x13 = getelementptr [3 x i32], [3 x i32]* %x3, i32 0, i32 1
%x14 = getelementptr [3 x i32], [3 x i32]* %x3, i32 0, i32 0
%x15 = load i32, i32* %x14
 %x16 = sub i32 %x15, 2
 store i32 %x16, i32* %x13
%x17 = getelementptr [3 x i32], [3 x i32]* %x3, i32 0, i32 1
%x18 = load i32, i32* %x17
store i32 %x18, i32* %x5
%x19 = getelementptr [3 x i32], [3 x i32]* %x3, i32 0, i32 2
 store i32 16, i32* %x19
%x20 = getelementptr [2 x i32], [2 x i32]* @field, i32 0, i32 0
%x21 = load i32, i32* %x20
 %x22 = sub i32 3, %x21
%x23 = getelementptr [3 x i32], [3 x i32]* %x3, i32 0, i32 %x22
%x24 = load i32, i32* %x23
 %x25 = add i32 %x24, 2
%x26 = load i32, i32* %x5
 %x27 = add i32 %x25, %x26
call void @putint(i32 %x27)
  ret i32 0
}