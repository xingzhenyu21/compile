declare i32 @getint()
declare void @putint(i32)
declare i32 @getch()
declare void @putch(i32)
declare void @memset(i32*, i32, i32)
declare i32 @getarray(i32*)
declare void @putarray(i32, i32*)
define dso_local i32 @_getMaxOfAll(i32* %x1,i32 %x2){
%x3 = alloca i32*
store i32*  %x1, i32* * %x3
 %x4 = load i32* , i32* * %x3
%x5 = alloca i32
 store i32 %x2, i32* %x5
%x6 = alloca i32
 %x7 = sub i32 0, 999999
store i32 %x7, i32* %x6
%x8 = load i32, i32* %x5
 %x9 = sub i32 %x8, 1
store i32 %x9, i32* %x5
br label %x10
x10:
%x11 = load i32, i32* %x5
 %x12 = sub i32 0, 1
%x13= icmp sgt i32 %x11, %x12
%x14= zext i1 %x13 to i32   %x15 = icmp ne i32 %x14, 0
   br i1 %x15,label %x16, label %x17
x16:
%x18 = load i32, i32* %x5
%x19 = getelementptr i32, i32* %x4, i32 %x18
%x20 = load i32, i32* %x19
%x21 = load i32, i32* %x6
%x22= icmp sgt i32 %x20, %x21
%x23= zext i1 %x22 to i32   %x24 = icmp ne i32 %x23, 0
   br i1 %x24,label %x25, label %x26
x25:
%x27 = load i32, i32* %x5
%x28 = getelementptr i32, i32* %x4, i32 %x27
%x29 = load i32, i32* %x28
store i32 %x29, i32* %x6
br label %x26
x26:
%x31 = load i32, i32* %x5
 %x32 = sub i32 %x31, 1
store i32 %x32, i32* %x5
  br label %x10
x17:
%x33 = load i32, i32* %x6
  ret i32 %x33
}
define dso_local i32 @main(){
%x34 = alloca [ 3 x i32]
%x35 = getelementptr [3 x i32], [3 x i32]* %x34, i32 0, i32 0
call void @memset(i32* %x35, i32 0, i32 12)
%x36 = getelementptr [3 x i32], [3 x i32]* %x34, i32 0, i32 0
 %x37 = sub i32 0, 2
 store i32 %x37, i32* %x36
%x38 = getelementptr [3 x i32], [3 x i32]* %x34, i32 0, i32 1
 store i32 2, i32* %x38
%x39 = getelementptr [3 x i32], [3 x i32]* %x34, i32 0, i32 2
 %x40 = sub i32 0, 7
 store i32 %x40, i32* %x39
%x41 = alloca i32
%x42 = getelementptr [3 x i32], [3 x i32]* %x34, i32 0, i32 0
%x43 = load i32, i32* %x42
%x44 = call i32 @_getMaxOfAll(i32* %x43,i32 3)
%x45 = getelementptr [3 x i32], [3 x i32]* %x34, i32 0, i32 %x44
%x46 = load i32, i32* %x45
store i32 %x46, i32* %x41
%x47 = load i32, i32* %x41
call void @putint(i32 %x47)
  ret i32 0
}
