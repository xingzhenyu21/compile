declare i32 @getint()
declare void @putint(i32)
declare i32 @getch()
declare void @putch(i32)
declare void @memset(i32*, i32, i32)
declare i32 @getarray(i32*)
declare void @putarray(i32, i32*)
@arr = dso_local global [5 x [5 x i32]] zeroinitializer 
define dso_local i32 @foo(i32* %x1){
%x2 = alloca i32*
store i32*  %x1, i32* * %x2
 %x3 = load i32* , i32* * %x2
%x4 = getelementptr [0 x i32], [0 x i32]* %x3, i32 0, i32 1
 store i32 1, i32* %x4
  ret i32 2
}
define dso_local i32 @main(){
%x5 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* @arr, i32 0, i32 0
%x6 = getelementptr [5 x i32], [5 x i32]* %x5, i32 0, i32 0
%x7 = call i32 @foo(i32* %x6)
call void @putint(i32 %x7)
%x8 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* @arr, i32 0, i32 1
%x9 = getelementptr [5 x i32], [5 x i32]* %x8, i32 0, i32 1
%x10 = load i32, i32* %x9
call void @putint(i32 %x10)
  ret i32 0
}
