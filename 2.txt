declare void @memset(i32*, i32, i32)
declare i32 @getch()
@ints = dso_local global [10000x i32] zeroinitializer 
@intt = dso_local global i32 0
@chas = dso_local global [10000x i32] zeroinitializer 
@chat = dso_local global i32 0
@i = dso_local global i32 0
@ii = dso_local global i32 1
@c = dso_local global i32 0
@get = dso_local global [10000x i32] zeroinitializer 
@get2 = dso_local global [10000x i32] zeroinitializer 
define dso_local i32 @main(){
store i32 0, i32* @intt
store i32 0, i32* @chat
%x1 = alloca i32
%x2 = getelementptr [10000 x i32], [10000 x i32]* @get, i32 0, i32 0
%x3 = alloca i32*
store i32*  %x2, i32* * %x3
 %x4 = load i32* , i32* * %x3
%x5 = alloca i32
%x6 = call i32 @getch()
store i32 %x6, i32* %x5
%x7 = alloca i32
store i32 0, i32* %x7
br label %x8
x8:
%x9 = load i32, i32* %x5
%x10= icmp ne i32 %x9, 13
%x11= zext i1 %x10 to i32
%x12 = load i32, i32* %x5
%x13= icmp ne i32 %x12, 10
%x14= zext i1 %x13 to i32
%x15 = mul i32 %x11, %x14
   %x16 = icmp ne i32 %x15, 0
   br i1 %x16,label %x17, label %x18
x17:
%x19 = load i32, i32* %x7
%x20 = getelementptr i32, i32* %x4, i32 %x19
%x21 = load i32, i32* %x5
 store i32 %x21, i32* %x20
%x22 = load i32, i32* %x7
 %x23 = add i32 %x22, 1
store i32 %x23, i32* %x7
%x24 = call i32 @getch()
store i32 %x24, i32* %x5
  br label %x8
x18:
%x25 = load i32, i32* %x7
store i32 %x25, i32* %x1
  ret i32 0
}
