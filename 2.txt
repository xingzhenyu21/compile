declare i32 @getint()
declare void @putint(i32)
declare i32 @getch()
declare void @putch(i32)
declare void @memset(i32*, i32, i32)
declare i32 @getarray(i32*)
declare void @putarray(i32, i32*)
@ans = dso_local global [50x i32] zeroinitializer 
@sum = dso_local global i32 0
@n = dso_local global i32 0
@row = dso_local global [50x i32] zeroinitializer 
@line1 = dso_local global [50x i32] zeroinitializer 
@line2 = dso_local global [100x i32] zeroinitializer 
define dso_local void @printans(){
%x1 = load i32, i32* @sum
 %x2 = add i32 %x1, 1
store i32 %x2, i32* @sum
%x3 = alloca i32
store i32 1, i32* %x3
br label %x4
x4:
%x5 = load i32, i32* %x3
%x6 = load i32, i32* @n
%x7= icmp sle i32 %x5, %x6
%x8= zext i1 %x7 to i32
   %x9 = icmp ne i32 %x8, 0
   br i1 %x9,label %x10, label %x11
x10:
%x12 = load i32, i32* %x3
%x13 = getelementptr [50 x i32], [50 x i32]* @ans, i32 0, i32 %x12
%x14 = load i32, i32* %x13
call void @putint(i32 %x14)
%x15 = load i32, i32* %x3
%x16 = load i32, i32* @n
%x17= icmp eq i32 %x15, %x16
%x18= zext i1 %x17 to i32
   %x19 = icmp ne i32 %x18, 0
   br i1 %x19,label %x20, label %x21
x20:
call void @putch(i32 10)
ret void
br label %x22
x21:
call void @putch(i32 32)
br label %x22
x22:
%x23 = load i32, i32* %x3
 %x24 = add i32 %x23, 1
store i32 %x24, i32* %x3
  br label %x4
x11:
   ret void
}
define dso_local void @f(i32 %x25){
%x26 = alloca i32
 store i32 %x25, i32* %x26
%x27 = alloca i32
store i32 1, i32* %x27
br label %x28
x28:
%x29 = load i32, i32* %x27
%x30 = load i32, i32* @n
%x31= icmp sle i32 %x29, %x30
%x32= zext i1 %x31 to i32
   %x33 = icmp ne i32 %x32, 0
   br i1 %x33,label %x34, label %x35
x34:
%x36 = load i32, i32* %x27
%x37 = getelementptr [50 x i32], [50 x i32]* @row, i32 0, i32 %x36
%x38 = load i32, i32* %x37
%x39= icmp ne i32 %x38, 1
%x40= zext i1 %x39 to i32
%x41 = load i32, i32* %x26
%x42 = load i32, i32* %x27
 %x43 = add i32 %x41, %x42
%x44 = getelementptr [50 x i32], [50 x i32]* @line1, i32 0, i32 %x43
%x45 = load i32, i32* %x44
%x46= icmp eq i32 %x45, 0
%x47= zext i1 %x46 to i32
%x48 = mul i32 %x40, %x47
%x49 = load i32, i32* @n
%x50 = load i32, i32* %x26
 %x51 = add i32 %x49, %x50
%x52 = load i32, i32* %x27
 %x53 = sub i32 %x51, %x52
%x54 = getelementptr [100 x i32], [100 x i32]* @line2, i32 0, i32 %x53
%x55 = load i32, i32* %x54
%x56= icmp ne i32 %x55, 0
%x57 = xor i1  %x56, true
%x58= zext i1 %x57 to i32
%x59 = mul i32 %x48, %x58
   %x60 = icmp ne i32 %x59, 0
   br i1 %x60,label %x61, label %x62
x61:
%x63 = load i32, i32* %x26
%x64 = getelementptr [50 x i32], [50 x i32]* @ans, i32 0, i32 %x63
%x65 = load i32, i32* %x27
 store i32 %x65, i32* %x64
%x66 = load i32, i32* %x26
%x67 = load i32, i32* @n
%x68= icmp eq i32 %x66, %x67
%x69= zext i1 %x68 to i32
   %x70 = icmp ne i32 %x69, 0
   br i1 %x70,label %x71, label %x72
x71:
call void @printans()
br label %x72
x72:
%x74 = load i32, i32* %x27
%x75 = getelementptr [50 x i32], [50 x i32]* @row, i32 0, i32 %x74
 store i32 1, i32* %x75
%x76 = load i32, i32* %x26
%x77 = load i32, i32* %x27
 %x78 = add i32 %x76, %x77
%x79 = getelementptr [50 x i32], [50 x i32]* @line1, i32 0, i32 %x78
 store i32 1, i32* %x79
%x80 = load i32, i32* @n
%x81 = load i32, i32* %x26
 %x82 = add i32 %x80, %x81
%x83 = load i32, i32* %x27
 %x84 = sub i32 %x82, %x83
%x85 = getelementptr [100 x i32], [100 x i32]* @line2, i32 0, i32 %x84
 store i32 1, i32* %x85
%x86 = load i32, i32* %x26
 %x87 = add i32 %x86, 1
call void @f(i32 %x87)
%x88 = load i32, i32* %x27
%x89 = getelementptr [50 x i32], [50 x i32]* @row, i32 0, i32 %x88
 store i32 0, i32* %x89
%x90 = load i32, i32* %x26
%x91 = load i32, i32* %x27
 %x92 = add i32 %x90, %x91
%x93 = getelementptr [50 x i32], [50 x i32]* @line1, i32 0, i32 %x92
 store i32 0, i32* %x93
%x94 = load i32, i32* @n
%x95 = load i32, i32* %x26
 %x96 = add i32 %x94, %x95
%x97 = load i32, i32* %x27
 %x98 = sub i32 %x96, %x97
%x99 = getelementptr [100 x i32], [100 x i32]* @line2, i32 0, i32 %x98
 store i32 0, i32* %x99
br label %x62
x62:
%x101 = load i32, i32* %x27
 %x102 = add i32 %x101, 1
store i32 %x102, i32* %x27
  br label %x28
x35:
ret void
}
define dso_local i32 @main(){
%x103 = alloca i32
%x104 = call i32 @getint()
store i32 %x104, i32* %x103
br label %x105
x105:
%x106 = load i32, i32* %x103
%x107= icmp sgt i32 %x106, 0
%x108= zext i1 %x107 to i32   %x109 = icmp ne i32 %x108, 0
   br i1 %x109,label %x110, label %x111
x110:
%x112 = call i32 @getint()
store i32 %x112, i32* @n
call void @f(i32 1)
%x113 = load i32, i32* %x103
 %x114 = sub i32 %x113, 1
store i32 %x114, i32* %x103
  br label %x105
x111:
  ret i32 0
}
